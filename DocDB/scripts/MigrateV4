#! /usr/bin/env perl
#
# Author Eric Vaandering (ewv@fnal.gov)
#

# Usage: MigrateV4 --u=username --p=password --a=init|migrate|delete

use DBI;
use Getopt::Long;

require "CGIInclude.pm";

require "DocDBGlobals.pm";

&GetOptions("a=s" => \$Action,"u=s" => \$User,"p=s" => \$Password);

unless ($Action eq "init" or $Action eq "delete" or $Action eq "migrate") {
  print "Usage: MigrateV4 --u=username --p=password --a=init|migrate|delete\n\n";
  print "This script is used to migrate from a version 3 to version 4 DB structure. \n";
  print "It adds the IntroText field to the Conference table and new tables for \n";
  print "organizing meetings. \n\n";
  print "Run this script in \"init\" mode first, then in \"migrate\" mode.  \n\n";
  print "At this point you can update the CGI code and when you are comfortable  \n";
  print "everything is OK, run in \"delete\" mode to erase old columns and/or tables.  \n";
 exit;
}  

$dbh   = DBI->connect('DBI:mysql:'.$db_name.':'.$db_host,$User,$Password);

if ($Action eq "init") { # Modify existing tables and add new tables in preparation for migration 

### Edit the first line if you have a different admin account

  my $ConferenceAdd  = $dbh -> prepare("alter table Conference add Preamble text"); 
  my $ConferenceAdd2 = $dbh -> prepare("alter table Conference add Title varchar(128)"); 
  my $ConferenceAdd3 = $dbh -> prepare("alter table Conference add Epilogue text"); 
  my $ConferenceUpd  = $dbh -> prepare("alter table Conference modify URL varchar(240)"); 

  my $SessSepCreate = $dbh -> prepare("create table SessionSeparator ".
                   "(SessionSeparatorID integer auto_increment primary key,".
                   " ConferenceID integer, StartTime datetime, Title varchar(128),".
                   " Description text, TimeStamp timestamp,".
                   " index(ConferenceID))"); 
  
  my $MeetOrdCreate = $dbh -> prepare("create table MeetingOrder ".
                   "(MeetingOrderID integer auto_increment primary key,".
                   " ConferenceID integer, SessionOrder integer, SessionID integer,".
                   " SessionSeparatorID integer, TimeStamp timestamp,".
                   " index(ConferenceID), index(SessionID), index(SessionSeparatorID))"); 
                   
  my $SessionCreate = $dbh -> prepare("create table Session ".
                   "(SessionID integer auto_increment primary key,".
                   " ConferenceID integer, StartTime datetime, Title varchar(128),".
                   " Description text, TimeStamp timestamp,".
                   " index(ConferenceID))"); 

  my $SessOrdCreate = $dbh -> prepare("create table SessionOrder ".
                   "(SesionOrderID integer auto_increment primary key,".
                   " SessionID integer, TalkOrder integer, TalkID integer,".
                   " TalkSeparatorID integer, TimeStamp timestamp,".
                   " index(SessionID), index(TalkID), index(TalkSeparatorID))"); 
                   
  my $TalkSepCreate = $dbh -> prepare("create table TalkSeparator ".
                   "(TalkSeparatorID integer auto_increment primary key,".
                   " SessionID integer, Time datetime, Title varchar(128),".
                   " Description text, TimeStamp timestamp,".
                   " index(SessionID))"); 
  
  my $SessTalkCreate = $dbh -> prepare("create table SessionTalk ".
                   "(SessionTalkID integer auto_increment primary key,".
                   " SessionID integer, DocumentID integer, Confirmed integer,".
                   " Time datetime, HintTitle varchar(128),".
                   " Note text, TimeStamp timestamp,".
                   " index(SessionID),index(DocumentID))"); 

  my $AuthorHintCreate = $dbh -> prepare("create table AuthorHint ".
                   "(AuthorHintID integer auto_increment primary key,".
                   " SessionTalkID integer, AuthorID integer, TimeStamp timestamp,".
                   " index(SessionTalkID))"); 
  
  my $TopicHintCreate = $dbh -> prepare("create table TopicHint ".
                   "(TopicHintID integer auto_increment primary key,".
                   " SessionTalkID integer, TopicID integer, TimeStamp timestamp,".
                   " index(SessionTalkID))"); 
  
  $ConferenceAdd    -> execute();
  $ConferenceAdd2   -> execute();
  $ConferenceAdd3   -> execute();
  $SessSepCreate    -> execute();
  $MeetOrdCreate    -> execute();
  $SessionCreate    -> execute();
  $SessOrdCreate    -> execute();
  $TalkSepCreate    -> execute();
  $SessTalkCreate   -> execute();               
  $AuthorHintCreate -> execute(); 
  $TopicHintCreate  -> execute(); 
}

if ($Action eq "migrate") {
#  my ($DocRevID,$JournalID,$Volume,$Page);
#  my $RevisionList  = $dbh -> prepare(
#     "select DocRevID,JournalID,Volume,Page from DocumentRevision where JournalID>0"); 
#  my $ReferenceInsert  = $dbh -> prepare(
#     "insert into RevisionReference (ReferenceID,DocRevID,JournalID,Volume,Page) values (0,?,?,?,?)"); 
#  $RevisionList -> execute;
#  $RevisionList -> bind_columns(undef, \($DocRevID,$JournalID,$Volume,$Page));
#  while ($RevisionList -> fetch) {
#    $ReferenceInsert -> execute($DocRevID,$JournalID,$Volume,$Page);
#  }
}

if ($Action eq "delete") { # Drop useless columns 
#  my $JournalDel = $dbh -> prepare("alter table DocumentRevision drop JournalID"); 
#  $JournalDel -> execute();
}

exit;
