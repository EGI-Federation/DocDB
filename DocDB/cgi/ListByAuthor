#! /usr/bin/env perl
#
# Author Eric Vaandering (ewv@fnal.gov)
#

use Benchmark;
use CGI;
use DBI;

$StartTime = new Benchmark;

require "DocDBGlobals.pm";
require "ResponseElements.pm";

require "AuthorSQL.pm";
require "DocumentSQL.pm";
require "RevisionSQL.pm";
require "SecuritySQL.pm";

require "HTMLUtilities.pm";
require "Security.pm";
require "Sorts.pm";

$query = new CGI;  # Global for subroutines

%params = $query -> Vars;

my $AuthorID = $params{authorid};

$dbh   = DBI->connect('DBI:mysql:'.$db_name.':'.$db_host,$db_rouser,$db_ropass);

&GetSecurityGroups;
&GetInstitutions;

### Start HTML

print $query->header;
&BTeVHeader("Document List by Author");

print "<center><h4><font color=\"blue\">\n";
&PrintAuthorInfo($AuthorID);
print "</font><br>is listed as an author on the following documents:</h4></center><p>\n";

my $revision_list = $dbh -> prepare(
   "select DocRevID from RevisionAuthor where AuthorID=?"); 

my $document_list = $dbh -> prepare(
   "select DocumentID from DocumentRevision where DocRevID=?"); 

my $DocumentID,$DocRevID;

### Get all revisions with this author

my %DocumentIDs = ();
$revision_list -> execute($AuthorID);
$revision_list -> bind_columns(undef, \($DocRevID));

while ($revision_list -> fetch) {
  $document_list -> execute($DocRevID);
  ($DocumentID) = $document_list -> fetchrow_array;
  $DocumentIDs{$DocumentID} = 1; # Hash removes duplicates
}

### Get list of documents and read in the information we need from database

my @DocumentIDs = keys %DocumentIDs;

foreach my $DocumentID (@DocumentIDs) { # For shorter lists
  &FetchDocument($DocumentID);
  &FetchDocRevision($DocumentID,$Documents{$DocumentID}{NVER});
}

### Sort

@DocumentIDs = reverse sort DocumentByRevisionDate @DocumentIDs;  

### Print summary information

print "<center><table cellpadding=3>\n";

&DocumentSummary(0); # Force table headers

foreach $DocumentID (@DocumentIDs) {
  unless ($DocumentID) {next;}
  unless (&CanAccess($DocumentID,$Documents{$DocumentID}{NVER})) {next;}
  # FIXME: Need to put latest document accessible if last version isn't
  &DocumentSummary($DocumentID);
}

print "</table></center>\n";
print "<p>\n";

### Finish off page

$EndTime  = new Benchmark;
$TimeDiff = timediff($EndTime,$StartTime);
print "<p><b>Execution time: </b>",timestr($TimeDiff),"<p>\n";

&DocDBNavBar();
&BTeVFooter($DBWebMasterEmail,$DBWebMasterName);
