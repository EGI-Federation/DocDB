#! /usr/bin/env perl
#
# Author Eric Vaandering (ewv@fnal.gov)
#
# Inputs: 
#  Three ways of getting information 
#    1) topicid=? gives all documents with that MinorTopicID
#    2) majorid=? gives all documents with that MajorTopicID
#    3) major=?   gives all documents with the MajorTopicID 
#                 with that ShortDescription
#
#  Three modes of presenting information:
#    1) mode=date (default, sorted by reverse date, modification date given)
#    2) mode=meeting (sorted by author, files are listed)
#    3) mode=conference (sorted by reverse date, conference fields shown)

use Benchmark;
use CGI;
use DBI;

$StartTime = new Benchmark;

require "DocDBGlobals.pm";
require "ResponseElements.pm";

require "TopicSQL.pm";
require "DocumentSQL.pm";
require "RevisionSQL.pm";
require "SecuritySQL.pm";

require "HTMLUtilities.pm";
require "Security.pm";
require "Sorts.pm";

$query = new CGI;  # Global for subroutines

%params = $query -> Vars;

my $TopicID = $params{topicid};
my $MajorID = $params{majorid};
my $Major   = $params{major};
my $Mode    = $params{mode};

$dbh   = DBI->connect('DBI:mysql:'.$db_name.':'.$db_host,$db_rouser,$db_ropass);

&GetSecurityGroups;
&SpecialMajorTopics;

if ($Major || $MajorID) {
  &GetTopics;
  if ($Major) {
    $MajorID = &LookupMajorTopic($Major);
  }  
} else {  
  &FetchMinorTopic($TopicID);
}

### Set defaults

unless ($Mode eq "date" or $Mode eq "meeting" or $Mode eq "conference") {
  $Mode = "date";
}  

### Start HTML

print $query->header;

if ($Mode eq "conference") {
  &BTeVHeader("Conference Documents");
  print "<center><h4>\n";
  if ($TopicID) { # This is just one conference, so we can print more info
    require "MiscSQL.pm";
    &FetchConferenceByTopicID($TopicID);
    print "These documents from \n";
    print "<font color=\"blue\">$MinorTopics{$TopicID}{LONG}</font>,<br>";
    print " held from ",&EuroDate($Conferences{$TopicID}{STARTDATE});
    print " to ",&EuroDate($Conferences{$TopicID}{ENDDATE});
    print " in $Conferences{$TopicID}{LOCATION}\n";
    print " are available.<br>\n";
    print "(<a href=\"$Conferences{$TopicID}{URL}\">Conference Homepage</a>)\n";
    print "</center>\n";
  }
} else {
  &BTeVHeader("Document List by Topic");
  print "<center><h4>\n";

  print "These documents on <font color=\"blue\">\n";
  if ($MajorID) {
    print $MajorTopics{$MajorID}{SHORT},"\n";
  } else {
    print $MinorTopics{$TopicID}{FULL},"\n";
  }
  print "</font> are available:\n";
}
print "</h4></center><p>\n";

my $revision_list = $dbh -> prepare(
   "select DocRevID from RevisionTopic where MinorTopicID=?"); 
my $revtopic_list = $dbh -> prepare(
   "select DocRevID,MinorTopicID from RevisionTopic"); 
my $document_list = $dbh -> prepare(
   "select DocumentID from DocumentRevision where DocRevID=?"); 

my $DocumentID,$DocRevID;

### Get all revisions with this sub topic

my %DocumentIDs = ();

if ($TopicID) {
  $revision_list -> execute($TopicID);
  $revision_list -> bind_columns(undef, \($DocRevID));

  while ($revision_list -> fetch) {
    $document_list -> execute($DocRevID);
    ($DocumentID) = $document_list -> fetchrow_array;
    $DocumentIDs{$DocumentID} = 1; # Hash removes duplicates
  }
}

### Get all revisions with this major topic
if ($MajorID) {
  $revtopic_list -> execute;
  $revtopic_list -> bind_columns(undef, \($DocRevID,$MinorTopicID));

  while ($revtopic_list -> fetch) {
    if ($MinorTopics{$MinorTopicID}{MAJOR} == $MajorID) {
      $document_list -> execute($DocRevID);
      ($DocumentID) = $document_list -> fetchrow_array;
      $DocumentIDs{$DocumentID} = 1; # Hash removes duplicates
    }
  }
}

### Get list of documents and read in the information we need from database

my @DocumentIDs = keys %DocumentIDs;

foreach my $DocumentID (@DocumentIDs) { # For shorter lists
  &FetchDocument($DocumentID);
  &FetchDocRevision($DocumentID,$Documents{$DocumentID}{NVER});
}

### Sort

if ($Mode eq "meeting") {
  @DocumentIDs = sort DocumentByRequester @DocumentIDs;  
} else {
  @DocumentIDs = reverse sort DocumentByRevisionDate @DocumentIDs;  
}

### Print summary information

print "<center><table cellpadding=3>\n";

&DocumentSummary(0,$Mode); # Force table headers

foreach $DocumentID (@DocumentIDs) {
  unless ($DocumentID) {next;}
  unless (&CanAccess($DocumentID,$Documents{$DocumentID}{NVER})) {next;}
  # FIXME: Need to put latest document accessible if last version isn't
  &DocumentSummary($DocumentID,$Mode);
}

print "</table></center>\n";
print "<p>\n";

### Finish off page

$EndTime  = new Benchmark;
$TimeDiff = timediff($EndTime,$StartTime);
print "<p><b>Execution time: </b>",timestr($TimeDiff),"<p>\n";

&DocDBNavBar();
&BTeVFooter($DBWebMasterEmail,$DBWebMasterName);
