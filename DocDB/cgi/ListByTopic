#! /usr/bin/env perl
#
# Author Eric Vaandering (ewv@fnal.gov)
#

use Benchmark;
use CGI;
use DBI;

$StartTime = new Benchmark;

require "ResponseElements.pm";
require "DocDBGlobals.pm";
require "TopicSQL.pm";
require "SecuritySQL.pm";
require "HTMLUtilities.pm";
require "Security.pm";
require "Sorts.pm";

$query = new CGI;  # Global for subroutines

%params = $query -> Vars;

my $TopicID = $params{topicid};
my $Mode    = $params{mode};

$dbh   = DBI->connect('DBI:mysql:'.$db_name.':'.$db_host,$db_rouser,$db_ropass);

&GetSecurityGroups;

print $query->header;
&BTeVHeader("Document List");

&FetchMinorTopic($TopicID);

# Set defaults

unless ($Mode eq "date" or $Mode eq "meeting") {
  $Mode = "date";
}  

print "<center><h4>These documents on <font color=\"blue\">
       $MinorTopics{$TopicID}{FULL}</font> are
available:</h4></center><p>\n";

my $revision_list = $dbh -> prepare(
   "select DocRevID from RevisionTopic where MinorTopicID=?"); 

my $document_list = $dbh -> prepare(
   "select DocumentID from DocumentRevision where DocRevID=?"); 

my $DocumentID,$DocRevID;

$revision_list -> execute($TopicID);
$revision_list -> bind_columns(undef, \($DocRevID));

while ($revision_list -> fetch) {
  $document_list -> execute($DocRevID);
  ($DocumentID) = $document_list -> fetchrow_array;
  $DocumentIDs{$DocumentID} = 1; # Hash removes duplicates
}

if ($Mode eq "meeting") {
  my @DocumentIDs = sort DocumentByRequester keys %DocumentIDs;  
} else {
  my @DocumentIDs = reverse sort DocumentByRevisionDate keys %DocumentIDs;  
}

print "<center><table cellpadding=3>\n";

&DocumentSummary(0,$Mode); # Force table headers

foreach $DocumentID (@DocumentIDs) {
  unless ($DocumentID) {next;}
  unless (&CanAccess($DocumentID,$Documents{$DocumentID}{NVER})) {next;}
  # FIXME: Need to put latest document accessible if last version isn't
  &DocumentSummary($DocumentID,$Mode);
}

print "</table></center>\n";
print "<p>\n";

print "Return to the <a href=$MainPage>main page</a>.\n";
print "<p>\n";

$EndTime  = new Benchmark;
$TimeDiff = timediff($EndTime,$StartTime);
print "<p><b>Execution time: </b>",timestr($TimeDiff),"<p>\n";

&DocDBNavBar;
&BTeVFooter($DBWebMasterEmail,$DBWebMasterName);
