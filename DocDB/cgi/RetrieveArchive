#! /usr/bin/env perl
#
# Author Eric Vaandering (ewv@fnal.gov)
#

use CGI;
use DBI;

require "DocDBGlobals.pm";
require "ResponseElements.pm";
require "MySQLAccess.pm";
require "FSUtilities.pm";
require "HTMLUtilities.pm";
require "Security.pm";

$query = new CGI;  # Global for subroutines

%params = $query -> Vars;

@error_stack = ();
@warn_stack  = ();

$DocumentID = $params{docid};
unless ($DocumentID) {
  push @error_stack,"You are must supply a document number!";
}  

$dbh   = DBI->connect('DBI:mysql:'.$db_name.':'.$db_host,$db_rouser,$db_ropass);
&GetSecurityGroups;
&FetchDocument($DocumentID);

if (defined $params{version}) { 
  $Version = $params{version};
} else {
  $Version = $Documents{$DocumentID}{NVER};
}

unless (&CanAccess($DocumentID,$Version)) {
  push @error_stack,"You are not authorized to view this document.";
}  

my $DocRevID   = &FetchDocRevision($DocumentID,$Version);

unless ($DocRevID) {
  push @error_stack,"This document does not exist.";
}

my $status;
my $File;      
my $URL;       
my $Directory; 

system "mkdir $file_root/tmp";

unless (@error_stack) {
  $File      = "$file_root/tmp/$DocumentID-$Version.tar.gz";
  $URL       = "$web_root/tmp/$DocumentID-$Version.tar.gz";
  $Directory = &GetDirectory($DocumentID,$Version);

  my $command = "$Tar czf  $File $Directory";
  $status = system($command);   
}
  
if ($status) {
  push @error_stack,"There was a problem creating the archive. Please contact an
                     administrator.";
}

if (@error_stack) {
  print $query->header;
} else {
  print $query -> redirect(-location => $URL, -method => 'GET');
}

&BTeVHeader("File Retrieve Results"); 

if (@warn_stack) {
  &WarnPage(@warn_stack);
  @warn_stack = ();
}
if (@error_stack) {  # The user made one or more mistakes, warn and exit
  &EndPage(@error_stack);
}

print "Command to execute: $command<br>\n"; 
print "Status: $status<br>\n"; 
#&PrintRevisionInfo($DocRevID);

&DocDBNavBar;
&BTeVFooter($DBWebMasterEmail,$DBWebMasterName);
